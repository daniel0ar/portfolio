{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","App","state","manager","players","balance","value","message","message2","winner","onSubmit","event","preventDefault","setState","getAccounts","accounts","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","lastWinner","call","getPlayers","getBalance","options","address","this","className","length","fromWei","onChange","target","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dd99cda.chunk.js","sourcesContent":["import Web3 from \"web3\";\n     \nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n \nconst web3 = new Web3(window.ethereum);\n \nexport default web3;","import web3 from \"./web3\";\n\nconst address = \"0xA2AaF7e048d08eDC26d10D01FB5087Cc6094935d\";\nconst abi = [{ \"constant\": true, \"inputs\": [], \"name\": \"manager\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"pickWinner\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"getPlayers\", \"outputs\": [{ \"name\": \"\", \"type\": \"address[]\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"enter\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"name\": \"players\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"lastWinner\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }];\n\n\nexport default new web3.eth.Contract(abi, address);","import \"./App.css\";\nimport React from \"react\";\nimport lottery from \"./lottery\";\nimport web3 from \"./web3\";\n\nclass App extends React.Component {\n  state = {\n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: '',\n    message2: '',\n    winner: ''\n  };\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance });\n  }\n  // this syntx instead of onSubmit(event){} because then the \"this\"\n  // defined as the class\n  onSubmit = async (event) => { \n    event.preventDefault(); //prevent default http request send from form\n    \n    this.setState({message: 'Waiting on transaction to succeed...'});\n\n    const accounts = await web3.eth.getAccounts();\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value,'ether')\n    });\n\n    this.setState({message: 'You have entered the contest!'});\n  };\n\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({message2: 'Waiting on transaction to succeed...'});\n    \n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n\n    this.setState({message2: 'We have a winner!'});\n    this.setState({winner: 'Winner is: ' + await lottery.methods.lastWinner().call()})\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Lottery Contract</h1>\n        <p>This contract is managed by {this.state.manager}. \n          There are currently {this.state.players.length} people entered competing to win {web3.utils.fromWei(this.state.balance,'ether')} ETH.\n        </p>\n\n        <hr></hr>\n\n        <form onSubmit={this.onSubmit}>\n          <h2>Want in?</h2>\n          <label>Amount of Ether to enter (must be over 0.01 ETH)</label>\n          <br></br>\n          <input \n            value={this.state.value}\n            onChange={event => this.setState({value: event.target.value})}></input>\n          <button>Enter</button>\n          <br></br>\n          <h4>{this.state.message}</h4>\n        </form>\n\n        <hr></hr>\n        \n        <h2>Ready to pick a winner?</h2>\n        <button onClick={this.onClick}>Roll it!</button>\n        <br></br>\n        <h4>{this.state.message2}</h4>\n        <h4>{this.state.winner}</h4>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}